from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery

from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from bot.keyboards.main_keyboards import main_reply_kb

from database.user import register_user, check_active_subscription, check_has_energy


router = Router()


@router.message(CommandStart())
async def cmd_start(msg: Message, state: FSMContext, session: AsyncSession) -> None:
    await state.clear()
    
    tg_user = msg.from_user
    user_id = tg_user.id
    username = tg_user.username or tg_user.full_name

    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–ª–∏ —É–∑–Ω–∞—ë–º —á—Ç–æ —É–∂–µ –±—ã–ª –≤ –ë–î
    is_new = await register_user(session, user_id, username)

    if is_new:
        await msg.answer(text = 
                         """–ü—Ä–∏–≤–µ—Ç! –Ø —Å–¥–µ–ª–∞—é –¥–ª—è —Ç–µ–±—è —Ä–∞—Å–∫–ª–∞–¥ –∏ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å!
                         
–ù–∞–ø–∏—à–∏ –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç—ã –∑–∞–¥–∞—ë—à—å –¥–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞.
–¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã –≤ –±–æ—Ç–µ, –ª–∏–±–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –∫–∞—Ä—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–∞ —Ä—É–∫–∞—Ö —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∫–æ–ª–æ–¥–∞!

–ü—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞:
–ë—É–¥—É –ª–∏ —è –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å –ê—Ä—Ç—ë–º–æ–º?
–ü—Ä–∏–º–µ—Ä —Ä–∞—Å–∫–ª–∞–¥–∞:
–í–ª—é–±–ª–µ–Ω–Ω—ã–µ, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å, 6 –º–µ—á–µ–π.

P.S. –ï—Å–ª–∏ –±–æ—Ç —Å–ª–æ–º–∞–ª—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å /start
–ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–Ω–∏–∑—É —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –∫—É–¥–∞ –ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç.""",
                        reply_markup=main_reply_kb)
    else:
        await msg.answer(f"""üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {username}!–Ø —Å–¥–µ–ª–∞—é –¥–ª—è —Ç–µ–±—è —Ä–∞—Å–∫–ª–∞–¥ –∏ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å!
                         
–ù–∞–ø–∏—à–∏ –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Ç—ã –∑–∞–¥–∞—ë—à—å –¥–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞.
–¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã –≤ –±–æ—Ç–µ, –ª–∏–±–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –∫–∞—Ä—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–∞ —Ä—É–∫–∞—Ö —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∫–æ–ª–æ–¥–∞!

–ü—Ä–∏–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞:
–ë—É–¥—É –ª–∏ —è –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å –ê—Ä—Ç—ë–º–æ–º?
–ü—Ä–∏–º–µ—Ä —Ä–∞—Å–∫–ª–∞–¥–∞:
–í–ª—é–±–ª–µ–Ω–Ω—ã–µ, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å, 6 –º–µ—á–µ–π.

P.S. –ï—Å–ª–∏ –±–æ—Ç —Å–ª–æ–º–∞–ª—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å /start
–ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–Ω–∏–∑—É —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –∫—É–¥–∞ –ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç.""",
                        reply_markup=main_reply_kb)
        

@router.message(F.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def send_quest(msg: Message, session: AsyncSession) -> None:
    if await check_active_subscription(session, msg.from_user.id):
        await msg.answer(text="–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞")
    else:
        await msg.answer(text="–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏")
    
    if await check_has_energy(session, msg.from_user.id):
        await msg.answer(text="–≠–Ω–µ—Ä–≥–∏—è –µ—Å—Ç—å")
    else:
        await msg.answer(text="–≠–Ω–µ—Ä–≥–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å")
    


@router.message(F.text == "–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥—ã")
async def get_cards(msg: Message, session: AsyncSession) -> None:
    if await check_active_subscription(session, msg.from_user.id):
        await msg.answer(text="–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞")
    else:
        await msg.answer(text="–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏")
    
    if await check_has_energy(session, msg.from_user.id):
        await msg.answer(text="–≠–Ω–µ—Ä–≥–∏—è –µ—Å—Ç—å")
    else:
        await msg.answer(text="–≠–Ω–µ—Ä–≥–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å")


@router.message(F.text == "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç")
async def get_info(msg: Message, session: AsyncSession) -> None:
    await msg.answer(text="""–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ""")